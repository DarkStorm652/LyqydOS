local function newRedirect(windowTable)
	local redirect = {
		write = function(text)
			local pos = windowTable.cursorX
			if windowTable.cursorX < 1 then
				text = string.sub(text, math.abs(windowTable.cursorX) + 2)
				windowTable.cursorX = 1
			end
			windowTable.buffer[windowTable.cursorY] = string.sub(windowTable.buffer[windowTable.cursorY], math.min(1, windowTable.cursorX - 1), windowTable.cursorX - 1)..text..string.sub(windowTable.buffer[windowTable.cursorY], windowTable.cursorX + string.len(text) - 1, windowTable.w - 2)
			windowTable.cursorX = pos + string.len(text)
			windowTable:draw()
		end,
		clear = function()
			for i=1, windowTable.h - 2 do
				windowTable.buffer[i] = string.rep(" ", windowTable.w - 2)
			end
			windowTable:draw()
		end,
		clearLine = function()
			windowTable.buffer[windowTable.cursorY] = string.rep(" ", windowTable.w - 2)
			windowTable:draw()
		end,
		getCursorPos = function()
			return windowTable.cursorX, windowTable.cursorY
		end,
		setCursorPos = function(x, y)
			windowTable.cursorX = tonumber(x)
			windowTable.cursorY = tonumber(y)
			windowTable:draw()
		end,
		setCursorBlink = function(b)
			windowTable.cursorBlink = b
			windowTable:draw()
		end,
		getSize = function()
			return windowTable.w - 2, windowTable.h - 2
		end,
		scroll = function(n)
			for i=1, windowTable.h - 3 do
				if windowTable.buffer[i + n] then
					windowTable.buffer[i] = windowTable.buffer[i + n]
				end
			end
			for i=1,n do
				windowTable.buffer[windowTable.h - (1 + n)] = string.rep(" ", windowTable.w - 2)
			end
			windowTable:draw()
		end,
	}
	return redirect
end

local window = {
	move = function(self, x, y)
		if x and y then
			self.x = tonumber(x)
			self.y = tonumber(y)
			self:draw()
			return true
		else
			return nil, "Must Specify X and Y!"
		end
	end,
	resize = function(self, _w, _h)
		if _w and _h then
			local w = tonumber(w)
			local h = tonumber(h)
			if w >= 5 and h >= 3 then
				self.w = w
				self.h = h
	end,
	draw = function(self)
		term.redirect(self.target)
		local top = nil
		if self.caption then
			if string.len(self.caption) > self.w - 4 then
				top = "+-"..string.sub(self.caption, 1, self.w - 4)
			else
				top = "+-"..self.caption
			end
			top = top..string.rep("-", self.w - (string.len(top) + 1)).."+"
		else
			top = "+"..string.rep("-", self.w - 2).."+"
		end
		term.setCursorPos(self.x, self.y)
		term.write(top)
		for i=1, self.h - 2 do
			term.setCursorPos(self.x, self.y + i)
			term.write("|"..string.sub(self.buffer[i], 1, self.w - 2))
			term.setCursorPos(self.x + self.w - 1, self.y + i)
			term.write("|")
		end
		term.setCursorPos(self.x, self.y + self.h - 1)
		term.write("+"..string.rep("-", self.w - 2).."+")
		term.setCursorPos(self.x + self.cursorX, self.y + self.cursorY)
		term.setCursorBlink(self.cursorBlink)
		term.restore()
	end,
}

local wmetatable = {
	__index = window,
}

function new(w, h, x, y, caption)
	local win = {
		buffer = {},
		cursorX = 1,
		cursorY = 1,
		cursorBlink = false,
		target = term.native,
		w = tonumber(w) or 19,
		h = tonumber(h) or 8,
		x = tonumber(x) or 1,
		y = tonumber(y) or 1,
		z = nil,
		caption = caption or nil,
	}
	win.redirect = newRedirect(win)
	for i=1, win.h-2 do
		win.buffer[i] = string.rep(" ", win.w - 2)
	end
	setmetatable( win, wmetatable )
	return win
end
